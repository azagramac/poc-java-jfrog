name: Build and Push Docker Image to JFrog

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-push:
    name: build, scan and push
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: my-app
      JFROG_REPO: docker-trial
      JFROG_REGISTRY: trialy6f3zb.jfrog.io

    steps:
      - name: üì¶ Checkout code
        uses: actions/checkout@v3

      - name: üîç Run Checkov scan
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          quiet: true
          framework: dockerfile

      - name: ‚òïÔ∏è Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          cache-dependency-path: '**/pom.xml'

      - name: ‚òïÔ∏è Set up env maven
        env:
          JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
          JFROG_TOKEN_LIBRARY: ${{ secrets.JFROG_TOKEN_LIBRARY }}
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                      http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>jfrog-release</id>
                <username>${JFROG_USERNAME}</username>
                <password>${JFROG_TOKEN_LIBRARY}</password>
              </server>
              <server>
                <id>jfrog-snapshot</id>
                <username>${JFROG_USERNAME}</username>
                <password>${JFROG_TOKEN_LIBRARY}</password>
              </server>
            </servers>
          </settings> 
          EOF

      - name: üîç Run PMD static analysis
        run: mvn pmd:check

      - name: ‚öôÔ∏è Build with Maven #(skip tests)
        run: mvn clean package #-DskipTests

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Log in to üê∏JFrog Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.JFROG_REGISTRY }}
          username: ${{ secrets.JFROG_USERNAME }}
          password: ${{ secrets.JFROG_TOKEN }}

      - name: üõ†Ô∏è Build üêãDocker image with commit SHA and latest tag
        id: build-image
        run: |
          GIT_SHA=$(git rev-parse --short "$GITHUB_SHA")
          IMAGE_TAG_SHA=${JFROG_REGISTRY}/${JFROG_REPO}/${IMAGE_NAME}:${GIT_SHA}
          IMAGE_TAG_LATEST=${JFROG_REGISTRY}/${JFROG_REPO}/${IMAGE_NAME}:latest

          echo "üì¶ Building image $IMAGE_TAG_SHA and $IMAGE_TAG_LATEST"
          docker build -t $IMAGE_TAG_SHA -t $IMAGE_TAG_LATEST .

          echo "IMAGE_TAG_SHA=$IMAGE_TAG_SHA" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG_LATEST=$IMAGE_TAG_LATEST" >> $GITHUB_OUTPUT

      - name: üöÄ Push üêãDocker image to üê∏JFrog (SHA/commit and latest)
        run: |
          docker push ${{ steps.build-image.outputs.IMAGE_TAG_SHA }}
          docker push ${{ steps.build-image.outputs.IMAGE_TAG_LATEST }}
